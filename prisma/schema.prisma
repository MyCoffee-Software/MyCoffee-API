generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model admin {
  idAdmin                        BigInt  @id(map: "Admin_pkey") @default(autoincrement())
  excluido                       Boolean
  usuario_admin_idAdminTousuario usuario @relation("admin_idAdminTousuario", fields: [idAdmin], references: [id], onDelete: Cascade, map: "Admin_idAdmin_fkey")
}

model assinatura {
  idAssinatura    BigInt   @id @default(autoincrement())
  formaPagamento  String
  enderecoEntrega String
  cpfSignatario   String
  dataInicio      DateTime @db.Date
  dataFim         DateTime @db.Date
  valor           Float
  excluido        Boolean
}

model cargo {
  idCargo                              BigInt           @id @default(autoincrement())
  excluido                             Boolean
  nome                                 String?
  funcionario_funcionario_cargoTocargo funcionario[]    @relation("funcionario_cargoTocargo")
  permissaoCargo                       permissaoCargo[]
}

model categoria {
  idCategoria       BigInt              @id @default(autoincrement())
  nomeCategoria     String
  excluidoCategoria Boolean
  produtosCategoria produtosCategoria[]
}

model cliente {
  idCliente                          BigInt    @id @default(autoincrement())
  excluido                           Boolean
  dataNascimento                     DateTime? @db.Date
  endereco                           String?
  telefone                           String?
  cpf                                String?
  usuario_cliente_idClienteTousuario usuario   @relation("cliente_idClienteTousuario", fields: [idCliente], references: [id], onDelete: Cascade)
}

model compra {
  idCompra        BigInt   @id @default(autoincrement())
  formaPagamento  String
  dataPagamento   DateTime @db.Date
  cpfComprador    String
  enderecoEntrega String
  excluido        Boolean
}

model formatacao {
  idFormatacao BigInt  @id @default(autoincrement())
  nome         String?
  html         String?
}

model funcionario {
  idFuncionario                              BigInt  @id @default(autoincrement())
  excluido                                   Boolean
  cargo                                      BigInt?
  cargo_funcionario_cargoTocargo             cargo?  @relation("funcionario_cargoTocargo", fields: [cargo], references: [idCargo], onDelete: NoAction)
  usuario_funcionario_idFuncionarioTousuario usuario @relation("funcionario_idFuncionarioTousuario", fields: [idFuncionario], references: [id], onDelete: Cascade)
}

model itemCarrinho {
  valorUnitario Float   @id
  quantidade    BigInt
  excluido      Boolean
}

model itemCompra {
  valorUnitarioItemCompra Float   @id
  quantidade              BigInt
  excluido                Boolean
}

model planoAssinatura {
  idPlanoAssinatura     BigInt   @id @default(autoincrement())
  nomePlanoAssinatura   String
  descontoPorcentual    Float
  precoMensal           Float
  precoAnual            Float
  ativo                 Boolean
  descricao             String?
  excluido              Boolean?
  imagemPlanoAssinatura String   @default("")
}

model produto {
  idProduto                 BigInt              @id @default(autoincrement())
  nomeProduto               String
  preco                     Float
  descricaoProduto          String
  descontoPorcentualProduto Float
  codigoDeBarras            String
  marca                     String
  excluido                  Boolean
  imagemProduto             String              @default("")
  produtosCategoria         produtosCategoria[]
}

model usuario {
  id                                             BigInt       @id @unique @default(autoincrement())
  email                                          String       @unique
  senha                                          String       @unique
  nome_completo                                  String       @unique
  excluido                                       Boolean
  imagem                                         String       @unique @default("")
  admin_admin_idAdminTousuario                   admin?       @relation("admin_idAdminTousuario")
  cliente_cliente_idClienteTousuario             cliente?     @relation("cliente_idClienteTousuario")
  funcionario_funcionario_idFuncionarioTousuario funcionario? @relation("funcionario_idFuncionarioTousuario")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model permissaoCargo {
  idCargo   BigInt @default(autoincrement())
  permissao String
  cargo     cargo  @relation(fields: [idCargo], references: [idCargo], onDelete: NoAction)

  @@id([idCargo, permissao])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model produtosCategoria {
  idProdutos          BigInt
  idCategorias        BigInt
  idProdutoCategorias BigInt    @id @default(autoincrement())
  categoria           categoria @relation(fields: [idCategorias], references: [idCategoria], onDelete: Cascade)
  produto             produto   @relation(fields: [idProdutos], references: [idProduto], onDelete: Cascade)
}
